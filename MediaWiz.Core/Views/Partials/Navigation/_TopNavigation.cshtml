@using Umbraco.Cms.Core.Models.PublishedContent
@using Umbraco.Extensions
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage

@{
    var site = (IPublishedContent)Umbraco.ContentAtRoot().FirstOrDefault();
    var children = site?.Children(x => x.IsVisible());
    var siblings = site?.Siblings().Where(x => x.IsVisible());
    if (siblings != null)
    {
        children = children?.Concat(siblings);
    }
}

<!-- create your responsive navbar -->
<nav class=" navbar-expand-lg navbar navbar-light bg-white" id="myNavbar">
    <!-- next is where your logo goes -->
    <img src="/wizard.svg?width=60&height=60" alt="MediaWizards Logo" />
    <a href="@site.Url()" class="navbar-brand" title="@site.Value("siteName")">@site.Value("siteName")</a>
    <!-- next is your mobile burger menu toggle -->
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#mainNav" aria-controls="mainNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>

    <!-- now we go to the main bit of the nav -->
    <div class="collapse navbar-collapse" id="mainNav">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">

            <!-- un comment the following line if you want to add the root node name to the top navigation-->
            <li class="nav-item px-4"><a class="nav-link @Html.Raw(Model.Id == site.Id ? "navi-link--active" : "")" href="@site.Url()">@site.Name</a></li>

            @foreach (var item in children!)
            {
                if (item.Children(x => x.IsVisible()).Any() && !item.Value<bool>("hideChildrenFromNav") && !item.Parent.Value<bool>("hideChildrenFromNav"))
                {
                    <li class="nav-item px-4 dropdown">
                        <a class="nav-link dropdown-toggle @(item.IsAncestorOrSelf(Model) ? "nav-link--active" : null)" href="#" id="@($"{item.Name.Replace(" ", "")}Dropdown")" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">@item.Name</a>
                        <div class="dropdown-menu" aria-labelledby="@($"{item.Name.Replace(" ", "")}Dropdown")">
                            @foreach (var child in item.Children().Where(x => x.IsVisible()))
                            {
                                <a class="dropdown-item" href="@child.Url()">@child.Name</a>
                            }
                        </div>
                    </li>
                }
                else
                {
                    @if (!item.Parent.Value<bool>("hideChildrenFromNav"))
                    {
                        <li class="nav-item px-4"><a class="nav-link @(item.IsAncestorOrSelf(Model) ? "nav-link--active" : null)" href="@item.Url()">@item.Name</a></li>
                    }
                }
            }
        </ul>
    </div>
</nav>