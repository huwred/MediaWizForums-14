@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using MediaWiz.Forums.Controllers
@using MediaWiz.Forums.Extensions
@using MediaWiz.Forums.Models
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Umbraco.Cms.Core.Models.PublishedContent
@using Umbraco.Cms.Core.Security
@using Umbraco.Cms.Core.Services
@using Umbraco.Cms.Core.Models
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Extensions

@inject IMemberManager _memberManager
@inject IMemberGroupService MemberGroupService
@inject IIdKeyMap keyMap

@{
    if (UserCanPostHere(Model))
    {
        var showTitle = (bool)TempData["showTitle"];

        var edit = false;
        if (TempData["edit"] != null)
        {
            edit = (bool)TempData["edit"];
        }

        var mode = edit ? Umbraco.GetDictionaryValueOrDefault("Forums.Posts.EditPost", "Edit Post") : (showTitle ? Umbraco.GetDictionaryValueOrDefault("Forums.Posts.Newpost", "Ask a Question") : Umbraco.GetDictionaryValueOrDefault("Forums.Posts.Reply", "Reply to Question"));
        var label = edit ? Umbraco.GetDictionaryValueOrDefault("Forums.Posts.Message", "Message") : (showTitle ? Umbraco.GetDictionaryValueOrDefault("Forums.Posts.Message", "Message") : Umbraco.GetDictionaryValueOrDefault("Forums.Posts.Reply", "Reply"));
        var btn = edit ? Umbraco.GetDictionaryValueOrDefault("Forums.Save", "Save") : (showTitle ? Umbraco.GetDictionaryValueOrDefault("Forums.Submit", "Submit") : Umbraco.GetDictionaryValueOrDefault("Forums.Save", "Save"));

        var Post = new ForumsPostModel();
        var user = _memberManager.GetCurrentMemberAsync().Result;
        IPublishedContent member = _memberManager.AsPublishedMember(user);
        if (edit)
        {
            
            if (member.Id != Model.Value<IPublishedContent>("postAuthor").Id)
            {
                <h3>You can't edit this post, it's not yours</h3>
                return;
            }

            Post.Id = Model.Id;
            Post.Body = Model.Value<string>("postBody", "");
            Post.Title = Model.Value<string>("postTitle", "");
        }

        Post.AuthorId = member.Id;
        Post.ParentId = Model.Id;
        Post.IsTopic = showTitle;

        <div class="accordion " id="accordionFlushExample">
            <div class="accordion-item">
                <h2 class="accordion-header" id="flush-headingOne">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseOne" aria-expanded="false" aria-controls="flush-collapseOne">
                        @mode
                    </button>
                </h2>
                <div id="flush-collapseOne" class="accordion-collapse collapse p-3" aria-labelledby="flush-headingOne" data-bs-parent="#accordionFlushExample">
                    @using (Html.BeginUmbracoForm<ForumsSurfaceController>("CreatePost", null, new { @class = "form-horizontal forum-reply-form" }))
                    {
                        <fieldset>

                            @Html.ValidationSummary("Reply", true)

                            @if (showTitle)
                            {
                                <div class="row g-3 align-items-center">
                                    <div class="col-auto">
                                        <label asp-for="@Post.Title" class="col-form-label"></label>
                                    </div>
                                    <div class="col-7">
                                        <input asp-for="@Post.Title" class="form-control" aria_required="true" />
                                        <span asp-validation-for="@Post.Title" class="form-text text-danger"></span>
                                    </div>
                                </div>

                            }

                            <div class="mb-3">
                                <div class="col ms-5">
                                    <textarea asp-for="@Post.Body" class="form-control new-post" aria_required="true" rows="10" cols="20"></textarea>
                                    <span asp-validation-for="@Post.Body" class="form-text text-danger"></span>
                                </div>
                            </div>
                            <input asp-for="@Post.Id" type="hidden" />
                            <input asp-for="@Post.ParentId" type="hidden" />
                            <input asp-for="@Post.AuthorId" type="hidden" />
                            <input asp-for="@Post.IsTopic" type="hidden" />

                            <div class="col ms-5 p-2">
                                <button type="submit" class="btn btn-dark">@btn</button> <button type="button" class="btn btn-secondary btn-cancel">@Umbraco.GetDictionaryValueOrDefault("Forums.Cancel", "Cancel")</button>
                            </div>
                        </fieldset>
                    }
                </div>
            </div>
        </div>

    }
}

@functions {

    public bool UserCanPostHere(IPublishedContent item)
    {
        if (!_memberManager.IsLoggedIn())
            return false;

        var canPostGroups = item.Value<string>("canPostGroups");

        // default is any one logged on...
        if (string.IsNullOrWhiteSpace(canPostGroups))
            return true;

        // is the user in any of those groups ?
        var allowedGroupList = new List<string>();
        foreach (var memberGroupStr in canPostGroups.Split(','))
        {
            var key = keyMap.GetKeyForId(Convert.ToInt32(memberGroupStr),UmbracoObjectTypes.MemberGroup).Result;
            var memberGroup = MemberGroupService.GetAsync(key).Result;
            if (memberGroup != null)
            {
                allowedGroupList.Add(memberGroup.Name);
            }
        }
        return _memberManager.IsMemberAuthorizedAsync(allowGroups: allowedGroupList).Result;
    }

}

