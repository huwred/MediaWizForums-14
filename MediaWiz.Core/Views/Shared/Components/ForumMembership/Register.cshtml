@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using MediaWiz.Forums.Controllers
@using MediaWiz.Forums.Extensions
@using MediaWiz.Forums.Helpers
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.Extensions.Options
@using Umbraco.Cms.Core.Configuration.Models
@using Umbraco.Cms.Core.Models.PublishedContent
@using Umbraco.Cms.Core.Services
@using Umbraco.Cms.Web.Website.Models
@using Umbraco.Extensions

@inject MemberModelBuilderFactory memberModelBuilderFactory;
@inject IOptions<GlobalSettings> hostingSettings
@inject IOptions<ForumConfigOptions> forumOptions

@{
    // Build a registration model with parameters
    var registerModel = memberModelBuilderFactory
        .CreateRegisterModel()
        .WithMemberTypeAlias(forumOptions.Value.MemberTypeAlias ?? "forumMember")
        .WithRedirectUrl(null)
        .WithCustomProperties(true)
        .UsernameIsEmail(false)
        .Build();
    var useCaptcha = Model.Value<bool>("useCaptcha");
    var success = TempData["FormSuccess"] != null;
    var _hostingSettings = hostingSettings.Value;
    var warningMsg = Umbraco.GetDictionaryValueOrDefault("Forums.Members.Register.Emailwarning", "The email will be coming from {0} so please add this domain to your whitelist. Should you not receive your validation email, please post on the Our Umbraco forums");
}


@if (success)
{
    @* This message will show if registerModel.RedirectUrl is not defined (default) *@
    <p class="text-success">@Umbraco.GetDictionaryValueOrDefault("Forums.Members.Register.Success","Your Registration was successful, you should now receive an email containing a validation link to verify your email address.")</p>
    <p>@String.Format(warningMsg,_hostingSettings.Smtp.From)</p>
}
else
{
    @if (useCaptcha)
    {
        
        <div id="captchaimage-div">
            @await Component.InvokeAsync("Captcha")
        </div>
    }

    using (Html.BeginUmbracoForm<ForumMemberController>("RegisterMe", null, new { @id = "register-form-id", style = "display:none", autocomplete = "off" }, FormMethod.Post))
    {
        <hr />
        <div class="mb-3">
            <label asp-for="@registerModel.Name" class="form-label"></label>
            <input asp-for="@registerModel.Name" class="form-control" autocomplete="off" aria_required="true" />
            <span asp-validation-for="@registerModel.Name" class="form-text text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="@registerModel.Username" class="form-label"></label>
            <input asp-for="@registerModel.Username" class="form-control" autocomplete="off" aria_required="true" />
            <span asp-validation-for="@registerModel.Username" class="form-text text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="@registerModel.Email" class="form-label"></label>
            <input asp-for="@registerModel.Email" class="form-control" autocomplete="off" aria_required="true" type="email"/>
            <span asp-validation-for="@registerModel.Email" class="form-text text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="@registerModel.Password" class="form-label"></label>
            <input asp-for="@registerModel.Password" class="form-control" autocomplete="new_password" type="password" aria_required="true" />
            <span asp-validation-for="@registerModel.Password" class="form-text text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="@registerModel.ConfirmPassword" class="form-label"></label>
            <input asp-for="@registerModel.ConfirmPassword" class="form-control" autocomplete="new-password" type="password" aria_required="true" />
            <span asp-validation-for="@registerModel.ConfirmPassword" class="form-text text-danger"></span>
        </div>

        @if (registerModel.MemberProperties != null)
        {
            for (var i = 0; i < registerModel.MemberProperties.Count; i++)
            {
                if (registerModel.MemberProperties[i].Alias == "receiveNotifications")
                {

                    <div class="mb-3">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="flexSwitchCheckDefault" value="@registerModel.MemberProperties[i].Value">
                            <label class="form-check-label" for="flexSwitchCheckDefault">@Html.LabelFor(m => registerModel.MemberProperties[i].Value, registerModel.MemberProperties[i].Name)</label>
                        </div>

                        <span asp-validation-for="@registerModel.MemberProperties[i].Value" class="form-text text-danger"></span>
                        <div id="notifyHelp" class="form-text">
                            @Umbraco.GetDictionaryValueOrDefault("Forums.Profile.NotifyHelp","Receive an email when someone posts on the forum.")
                        </div>
                    </div>
                }
                else
                {
                    <div class="mb-3">
                        <label asp-for="@registerModel.MemberProperties[i].Name" class="form-label"></label>
                        <input asp-for="@registerModel.MemberProperties[i].Value" class="form-control"/>
                        <input asp-for="@registerModel.MemberProperties[i].Alias" type="hidden"/>
                        <span asp-validation-for="@registerModel.MemberProperties[i].Value" class="form-text text-danger"></span>
                    </div>
                }
            }
        }

        <button type="submit" class="btn btn-dark" id="register-submit">@Umbraco.GetDictionaryValueOrDefault("Forums.Members.Register","Register")</button>
    }


}
@Html.PartialViewScriptBlock(@<script type="text/javascript">
        if ("@useCaptcha".toLowerCase() === "false") {
            $('#register-form-id').show();
        }
        if ("@success".toLowerCase() === "true") {
            $(".forum-intro").hide();
        }
    </script>)